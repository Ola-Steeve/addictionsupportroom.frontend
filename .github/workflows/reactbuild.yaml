name: CI-CD

on:

  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

      # install applicaion dependencies
    - name: Install dependencies
      run: |
        npm i -g
      # build app
    - name: build
      run: |
        CI=false npm run build
  push_to_Docker_Hub:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # build docker image and push to docker hub
    # only if the app build and test successfully
    needs: [build]

    steps:
      - name: checkout repo
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/soberpal.frontend:latest

      - name: Run the image in a container
        uses: addnab/docker-run-action@v3
        with:
          image: ${{ secrets.DOCKER_USERNAME }}/soberpal.frontend:latest
          run: |
            echo "runing the docker image"
  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    
    needs: [push_to_Docker_Hub]
  
    steps:
    - name: executing remote ssh commands using ssh key
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }} 
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          whoami
          cd /home/ubuntu
          sudo docker stop frontend
          sudo docker rm frontend
          sudo docker rmi -f ${{ secrets.DOCKER_USERNAME }}/soberpal.frontend:latest
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/soberpal.frontend:latest
          sudo docker run -d -p 3000:3000 --name frontend ${{ secrets.DOCKER_USERNAME }}/soberpal.frontend:latest
          sudo docker system prune -af
          sudo docker builder prune -af

